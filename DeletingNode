//https://www.geeksforgeeks.org/linked-list-set-3-deleting-node/
//time complexity O(n)

public class LinkedList_DeleteNode {
	Node head;
	
	static class Node{
		int data;
		Node next;
		
		Node(int data){
			this.data = data;
		}
	}
	
	public void print(Node head) {
		Node current = head;
		
		while(current != null) {
			System.out.print(current.data+"-->");
			current = current.next;
		}
		System.out.print("null\n");
	}
	
	public void deleteNode(int key) {
		if(head != null && head.data == key) {
			head = head.next;
			return;
		}
		
		Node current = head, prev = null;
		
		while(current != null && current.data != key) {
			prev = current;
			current = current.next;
		}
		
		if(current == null) {
			return;
		}
		
		if(current != null && current.data == key) {
			prev.next = current.next;
		}
	}
	
	public static void main(String[] args) {
		LinkedList_DeleteNode list = new LinkedList_DeleteNode();
		list.head = new Node(1);
		Node two = new Node(2);
		Node three = new Node(3);
		Node four = new Node(4);
		
		list.head.next = two;
		two.next = three;
		three.next = four;
		
		list.print(list.head);
		list.deleteNode(2);
		list.print(list.head);
	}
}
