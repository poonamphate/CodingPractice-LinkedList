//
//insert node in the LinkedList
https://www.geeksforgeeks.org/linked-list-set-2-inserting-a-node/
public class LinkedList{
    Node head;
    
    static class Node{
        Node next;
        int data;
        
        Node(int data){
            this.data = data;
        }
    }
    
    public void print(Node head){
        while(head != null){
            System.out.print(head.data+"-->");
            head = head.next;
        }
        System.out.println();
    }
    
    public void insertFront(int data){
        Node newNode = new Node(data);
        
        if(head == null){
            newNode = head;
            return;
        }
        
        newNode.next = head;
        head = newNode;
    }
    
    public void insertMiddle(int data, Node prevNode){
        Node newNode = new Node(data);
        if(prevNode = null){
            return;
        }
        newNode.next = prevNode.next;
        prevNode.next = newNode;
    }
    
    public void insertLast(int data){
        Node newNode = new Node(data);
        if(head == null){
            head = newNode;
            return;
        }
        
        Node currentNode = head;
        while(currentNode.next != null){
            currentNode = currentNode.next;
        }
        currentNode.next = newNode;
    }
    
    public static void main(String[] args){
        LinkedList list =new LinkedList();
        list.head = new Node(1);
        Node two = new Node(2);
        Node three = new Node(4);
        Node four = new Node(5);
        
        list.head.next = two;
        two.next = three;
        three.next = four;
        list.print(list.head);
        
        list.insertFront(10);
        System.out.println("node added in the front");
        list.print(list.head);
        
        list.insertMiddle(10, two);
        System.out.println("node added in the middle =>");
        list.print(list.head);
        
        list.insertLast(10);
        System.out.println("node added in the last");
        list.print(list.head);
    }
    
}
